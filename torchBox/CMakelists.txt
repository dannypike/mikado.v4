# Copyright (c) 2024 Gamaliel Ltd
#
# TorchBox is an test framebox for using libtorch to implement AI models
#
# 3.16 is required for target_precompile_headers(...PRECOMPILE_HEADERS_REUSE_FROM...)
# 3.25 is required for CMAKE_C_COMPILE_OPTIONS_MSVC_DEBUG_INFORMATION_FORMAT
cmake_minimum_required (VERSION 3.25)

cmake_policy(SET CMP0141 NEW)  # Enable the CMAKE_MSVC_DEBUG_INFORMATION_FORMAT variable
set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT "EditAndContinue")

set(DUMP_VARIABLES FALSE)
set(PROJECT_NAME TorchBox)
set(TARGET torchBox)

set(CMAKE_FOLDER ${CMAKE_CURRENT_SOURCE_DIR}/../cmake)
include(${CMAKE_FOLDER}/header.cmake)

set(SRC_FILES
   "src/torchBox.cpp"
   "src/testMulMat.cpp"
   "src/testMakeMore.cpp"
)

# Define the target as an EXE
include(${CMAKE_FOLDER}/common-exe.cmake)

if(TORCH_USE_VCPKG)

   message("Using vcpkg to locate the Torch files")
   target_include_directories(${TARGET} PRIVATE "${TORCH_INCLUDE_DIRS}")
   target_link_libraries(${TARGET} PRIVATE "${TORCH_LIBRARIES}")
   
   # If the folder does not contain the CUDA files, then copy them over
   if(NOT EXISTS ${EXECUTABLE_OUTPUT_PATH}/c10.dll)
      message("Copying the CUDA SDK DLLs")
      set(CUDA_SDK_SRC "D:/work/github/vcpkg/buildtrees/libtorch/x64-windows-dbg/bin")
      file(GLOB CUDA_SDK_FILES "${CUDA_SDK_SRC}/*.dll" "${CUDA_SDK_SRC}/*.pdb")
      #message("CUDA_SDK_FILES=${CUDA_SDK_FILES}")
      foreach(II IN ITEMS ${CUDA_SDK_FILES})
         get_filename_component(CUDA_SDK_FILE_NAME ${II} NAME)  
         message("copying file ${II}")
         configure_file(${II} ${EXECUTABLE_OUTPUT_PATH}/${CUDA_SDK_FILE_NAME} COPYONLY)
      endforeach()
   else()
      message("will not copy the CUDA SDK DLLs - ${EXECUTABLE_OUTPUT_PATH}/c10.dll already exists")
   endif()

elseif(TORCH_USE_FIND_PACKAGE)

   message("Using find_package to locate the Torch files")
   set(Torch_DIR "E:/Projects/AI/Pytorch/cpp-2.21/cuda-dbg-11.8/libtorch/share/cmake/Torch")
   find_package(Torch REQUIRED)
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${TORCH_CXX_FLAGS}")
   target_include_directories(${TARGET} PRIVATE "${TORCH_INCLUDE_DIRS}")
   target_link_libraries(${TARGET} PRIVATE "${TORCH_LIBRARIES}")

elseif(TORCH_USE_EXPLICIT)

   message("Linking to Torch files explicitly")
   include(${CMAKE_FOLDER}/torch-libraries.cmake)

endif()

include(${CMAKE_FOLDER}/common-all.cmake)
include(${CMAKE_FOLDER}/footer.cmake)
